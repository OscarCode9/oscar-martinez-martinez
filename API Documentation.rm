# API Documentation

This document provides examples of cURL requests for interacting with the API of a product management system. These requests cover user authentication, product management, and batch operations.

## 1. User Registration

### Endpoint:
`POST /auth/register`

### Description:
Registers a new user.

### Request:
```bash
curl --location 'http://localhost:3000/auth/register' \
--header 'Content-Type: application/json' \
--data-raw '{
    "name": "John Doe",
    "phone": "+1234567890",
    "email": "johndoe@example.com",
    "password": "securepassword123",
    "img_profile": "https://example.com/images/profile.jpg"
}'
```

---

## 2. User Login

### Endpoint:
`POST /auth/login`

### Description:
Authenticates a user and returns a JWT token.

### Request:
```bash
curl --location 'http://localhost:3000/auth/login' \
--header 'Content-Type: application/json' \
--data-raw '{
    "email": "johndoe@example.com",
    "password": "securepassword123"
}'
```

---

## 3. User Logout

### Endpoint:
`POST /auth/logout`

### Description:
Logs out a user by invalidating their JWT token.

### Request 1:
```bash
curl --location --request POST 'http://localhost:3000/auth/logout' \
--header 'Authorization: Bearer <JWT_TOKEN>' \
--data ''
```

### Request 2:
```bash
curl --location --request POST 'http://localhost:3000/auth/logout' \
--header 'Authorization: Bearer <JWT_TOKEN>' \
--data ''
```

---

## 4. Create Product

### Endpoint:
`POST /api/v1/products`

### Description:
Creates a new product associated with a user.

### Request:
```bash
curl --location 'http://localhost:3000/api/v1/products' \
--header 'Content-Type: application/json' \
--header 'Authorization: Bearer <JWT_TOKEN>' \
--data '{
  "userId": "60d5f484f2b1c1b28c4e15a0",
  "name": "Sample Product",
  "description": "This is a sample product.",
  "height": 10,
  "length": 20,
  "width": 15
}'
```

---

## 5. Get All Products

### Endpoint:
`GET /api/v1/products`

### Description:
Retrieves a list of products for the authenticated user.

### Request:
```bash
curl --location --request GET 'http://localhost:3000/api/v1/products' \
--header 'Content-Type: application/json' \
--header 'Authorization: Bearer <JWT_TOKEN>' \
--data ''
```

---

## 6. Update Product

### Endpoint:
`PUT /api/v1/products/{productId}`

### Description:
Updates an existing product by its ID.

### Request:
```bash
curl --location --request PUT 'http://localhost:3000/api/v1/products/{productId}' \
--header 'Content-Type: application/json' \
--header 'Authorization: Bearer <JWT_TOKEN>' \
--data '{
  "userId": "60d5f484f2b1c1b28c4e15a0",
  "name": "Updated Product Name",
  "description": "Updated product description.",
  "height": 10,
  "length": 20,
  "width": 15
}'
```

---

## 7. Delete Product

### Endpoint:
`DELETE /api/v1/products/{productId}`

### Description:
Deletes a product by its ID.

### Request:
```bash
curl --location --request DELETE 'http://localhost:3000/api/v1/products/{productId}' \
--header 'Content-Type: application/json' \
--header 'Authorization: Bearer <JWT_TOKEN>' \
--data ''
```

---

## 8. Batch Create Products

### Endpoint:
`POST /api/v1/products/user/batch`

### Description:
Creates multiple products in a batch for a user.

### Request:
```bash
curl --location 'http://localhost:3000/api/v1/products/user/batch' \
--header 'Content-Type: application/json' \
--header 'Authorization: Bearer <JWT_TOKEN>' \
--data '[
  {
    "userId": "60d5f484f2b1c1b28c4e15a0",
    "name": "Sample Product 1",
    "description": "This is the first sample product.",
    "height": 10,
    "length": 20,
    "width": 15
  },
  {
    "userId": "60d5f484f2b1c1b28c4e15a0",
    "name": "Sample Product 2",
    "description": "This is the second sample product.",
    "height": 12,
    "length": 25,
    "width": 18
  }
]'
```

---

## 9. Batch Delete Products

### Endpoint:
`DELETE /api/v1/products/user/batch`

### Description:
Deletes multiple products in a batch by their IDs.

### Request:
```bash
curl --location --request DELETE 'http://localhost:3000/api/v1/products/user/batch' \
--header 'Content-Type: application/json' \
--header 'Authorization: Bearer <JWT_TOKEN>' \
--data '[
    "6708f2399b8df30f8928deca",
    "6708f2399b8df30f8928decb",
    "6708f2399b8df30f8928decc"
]'
```

---

## 10. Batch Update Products

### Endpoint:
`PUT /api/v1/products/user/batch`

### Description:
Updates multiple products in a batch by their IDs.

### Request:
```bash
curl --location --request PUT 'http://localhost:3000/api/v1/products/user/batch' \
--header 'Content-Type: application/json' \
--header 'Authorization: Bearer <JWT_TOKEN>' \
--data '[
    {
        "_id": "6708dc73d2f48330d6f2d061",
        "userId": "6708c5a8ea6361da04d8f5d0",
        "name": "Updated Product 1",
        "description": "Updated description for product 1.",
        "height": 10,
        "length": 20,
        "width": 15
    },
    {
        "_id": "6708dc74d2f48330d6f2d064",
        "userId": "6708c5a8ea6361da04d8f5d0",
        "name": "Updated Product 2",
        "description": "Updated description for product 2.",
        "height": 10,
        "length": 20,
        "width": 15
    }
]'
```

---

### Notes:
- Replace `<JWT_TOKEN>` with the actual JWT token obtained after login.
- Ensure that the API is running locally at `localhost:3000`.